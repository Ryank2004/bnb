<section class="location">
    <h2 class="location-title">Location & Surroundings</h2>
    <div class="image-grid">
        <div class="map image-item" style="width: 100%">
            <iframe
                width="100%"
                height="100%"
                allowfullscreen
                referrerpolicy="no-referrer-when-downgrade"
                src="https://maps.google.com/maps?q=nieuwendammerdijk%20507&output=embed&z=13"
                title="location"
            >
            </iframe>
        </div>
        <div class="image-wrapper image-item">
            <img
                src="/images/entrance-1.webp"
                alt="entrance of the bed and breakfast"
                loading="lazy"
                class="touch"
            />
        </div>
        <div class="image-wrapper image-item">
            <img
                src="/images/entrance-2.webp"
                alt="entrance of the bed and breakfast"
                loading="lazy"
                class="touch"
            />
        </div>
        <div class="image-wrapper image-item">
            <img
                src="/images/front.webp"
                alt="front of the house"
                loading="lazy"
                class="touch"
            />
        </div>
    </div>

    <div class="lightbox" id="location-lightbox">
        <button id="location-lightbox-close" class="lightbox-close" aria-label="Sluiten"
            ><svg
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
                stroke-width="1.5"
                stroke="currentColor"
                class="size-6"
            >
                <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    d="m9.75 9.75 4.5 4.5m0-4.5-4.5 4.5M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z"
                ></path>
            </svg>
        </button>
        <img id="location-lightbox-img" alt="" class="lightbox-image"/>
    </div>
</section>

<script is:inline>
    const touch = document.querySelectorAll(".location .touch");
    const lightbox = document.getElementById("location-lightbox");
    const lightboxImg = document.getElementById("location-lightbox-img");
    const touchClose = document.getElementById("location-lightbox-close");

    touch.forEach((img) => {
        img.addEventListener("click", () => {
            lightboxImg.src = img.src;
            lightboxImg.alt = img.alt;
            lightbox.classList.add("active");
        });
    });

    lightbox.addEventListener("click", () => {
        lightbox.classList.remove("active");
    });

    touchClose.addEventListener("click", () => {
        lightbox.classList.remove("active");
    });

    // ===================================
    // 🎨 GSAP ANIMATIES VOOR LOCATION
    // ===================================
    
    function initLocationAnimations() {
        if (!window.lenisReady || !window.gsap) {
            setTimeout(initLocationAnimations, 100);
            return;
        }

        console.log("🗺️ Starting location animations...");

        // ===================================
        // 🎭 SCROLL-BASED OPACITY STAGGER
        // ===================================

        // Set initial state - alle items onzichtbaar
        window.gsap.set(".location .image-item", {
            opacity: 0,
        });

        // Scroll-based stagger animatie (linked aan scrollpositie)
        window.gsap.to(".location .image-item", {
            opacity: 1,
            duration: 1,
            stagger: {
                amount: 0.8, // Stagger duur: 0.8 seconden
                from: "start", // Start met eerste item (map)
                ease: "none", // Linear voor smooth scroll sync
            },
            scrollTrigger: {
                trigger: ".location",
                start: "30% 85%", // Start wanneer sectie in view komt
                end: "65% 60%", // End wanneer sectie bijna uit view is
                scrub: 1, // 🎯 KEY: Animatie volgt scrollpositie (1 sec delay)
                // markers: true, // Uncomment voor debug
            },
        });

        // ===================================
        // 📝 TITEL REVEAL ANIMATIE
        // ===================================

        // SplitType text splitting voor titel
        const locationTitle = new window.SplitType(".location-title", {
            types: "lines, words",
            lineClass: "line",
        });

        // Create line wrappers voor masking
        locationTitle.lines.forEach((line) => {
            const wrapper = document.createElement("div");
            wrapper.classList.add("line-wrapper-title");
            line.parentNode.insertBefore(wrapper, line);
            wrapper.appendChild(line);

            // Voeg reveal overlay toe
            const overlay = document.createElement("div");
            overlay.classList.add("section-reveal-overlay");
            overlay.classList.add("texture-image");
            wrapper.appendChild(overlay);
        });

        // Tekst op normale positie
        window.gsap.to(".location .line", {
            y: 0,
        });

        // Overlay slide-out animatie
        window.gsap.to(".location .section-reveal-overlay", {
            x: "110%",
            scrollTrigger: {
                trigger: ".location-title",
                start: "top 90%",
                end: "65% 60%",
                toggleActions: "play none none reverse",
                scrub: 1,
                // markers: true,
            },
        });

        // ===================================
        // 🎨 HOVER ANIMATIES
        // ===================================

        // Hover voor images binnen wrappers (net als eerste voorbeeld)
        document.querySelectorAll(".location .touch").forEach((img) => {
            img.addEventListener("mouseenter", () => {
                window.gsap.to(img, {
                    scale: 1.06,
                    duration: 0.3,
                    ease: "power2.out",
                });
            });

            img.addEventListener("mouseleave", () => {
                window.gsap.to(img, {
                    scale: 1,
                    rotation: 0,
                    duration: 0.3,
                    ease: "power2.out",
                });
            });
        });

        console.log("✅ Location animations initialized");
    }

    // ===================================
    // 🚀 START ANIMATIES
    // ===================================

    // Luister naar lenisReady event
    document.addEventListener("lenisReady", initLocationAnimations);

    // Fallback als event al afgevuurd is
    if (window.lenisReady) {
        initLocationAnimations();
    }
</script>

<style>
    /* REVEAL OVERLAY STYLES */
    :global(.section-reveal-overlay) {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: var(--light-color);
        z-index: 2;
        transform: translateX(0); /* Start positie: bedekt tekst */
    }

    :global(.line-wrapper-title) {
        position: relative;
        overflow: hidden;
    }

    .location {
        padding: 0 25px 160px;
    }

    .location-title {
        margin-bottom: 40px;
    }

    .image-grid {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        grid-template-rows: repeat(4, 1fr);
        grid-column-gap: 0px;
        grid-row-gap: 0px;
        gap: 12px;
        padding-top: 6px;
    }

    /* Image wrappers voor cool hover effect */
    .image-wrapper {
        border: solid 1.5px var(--primary-color);
        overflow: hidden;
    }

    /* Image items voor animatie targeting */
    .image-item {
        overflow: hidden; /* Voor hover scale effecten */
        cursor: pointer;
        transition: transform 0.3s ease; /* Fallback voor browsers zonder GSAP */
    }

    img {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .map iframe {
        border: solid 1.5px var(--primary-color);
    }

    .map {
        grid-area: 1 / 1 / 3 / 3;
    }
    .image-wrapper:nth-child(2) {
        grid-area: 3 / 1 / 4 / 2;
    }
    .image-wrapper:nth-child(3) {
        grid-area: 4 / 1 / 5 / 2;
    }
    .image-wrapper:nth-child(4) {
        grid-area: 3 / 2 / 5 / 3;
    }

    .lightbox {
        position: fixed;
        inset: 0;
        background: rgba(0, 0, 0, 0.8);
        align-items: center;
        justify-content: center;
        cursor: zoom-out;
        z-index: 1000;
        transition:
            opacity 0.2s ease-out,
            visibility 0.2s ease-out;
        opacity: 0;
        visibility: hidden;
        pointer-events: none;
        display: flex;
    }

    .lightbox.active {
        opacity: 1;
        visibility: visible;
        pointer-events: auto;
    }

    .lightbox-image {
        max-width: 90%;
        max-height: 90%;
        width: 100%;
        height: auto;
        object-fit: cover;
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);
    }

    .lightbox-close {
        position: absolute;
        top: 16px;
        right: 16px;
        background: transparent;
        border: none;
        font-size: 2rem;
        color: var(--light-color);
        cursor: pointer;
        z-index: 1001;
        line-height: 1;
    }

    .lightbox-close svg {
        width: 48px;
        height: auto;
    }

    .lightbox-close:focus {
        outline: 2px solid #fff;
    }

    @media screen and (min-width: 544px) {
        .location {
            padding: 0 40px 160px;
        }
    }

    @media screen and (min-width: 744px) {
        .image-grid {
            display: grid;
            grid-template-columns: repeat(4, 1fr);
            grid-template-rows: repeat(2, 1fr);
            grid-column-gap: 0px;
            grid-row-gap: 0px;
            gap: 12px;
            padding-top: 6px;
        }

        .map {
            grid-area: 1 / 1 / 3 / 3;
        }
        .image-wrapper:nth-child(2) {
            grid-area: 1 / 3 / 2 / 4;
        }
        .image-wrapper:nth-child(3) {
            grid-area: 2 / 3 / 3 / 4;
        }
        .image-wrapper:nth-child(4) {
            grid-area: 1 / 4 / 3 / 5;
        }

        .map-wrapper {
            display: flex;
            flex-direction: column;
            width: 100;
            height: 100%;
        }
    }

    @media screen and (min-width: 1024px) {
        .location {
            padding: 0 80px 160px;
        }
    }

    @media screen and (min-width: 1224px) {
        .location {
            padding: 0 120px 240px;
        }
    }
</style>