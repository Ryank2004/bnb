<section class="bedrooms-container">
    <h2>Where you will sleep</h2>
    <div class="bedrooms">
        <div class="bedroom">
            <div class="image-wrapper">
                <img
                    class="image"
                    src="/images/bedroom1-1.webp"
                    alt="bedroom 1"
                    loading="lazy"
                />
            </div>
            <p class="bedrooms-text">
                Bedroom 1<br /><span>1 king size bed</span>
            </p>
        </div>

        <div class="bedroom">
            <div class="image-wrapper">
                <img
                    class="image"
                    src="/images/bedroom2-3.webp"
                    alt="bedroom 2"
                    loading="lazy"
                />
            </div>
            <p class="bedrooms-text">
                Bedroom 2<br /><span>1 queen size bed</span>
            </p>
        </div>
    </div>
    <div id="bedroom-overlay" class="bedroom-overlay">
        <button
            id="bedroom-overlay-close"
            class="bedroom-overlay-close"
            aria-label="Sluiten"
            ><svg
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
                stroke-width="1.5"
                stroke="currentColor"
                class="size-6"
            >
                <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    d="m9.75 9.75 4.5 4.5m0-4.5-4.5 4.5M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z"
                ></path>
            </svg>
        </button>
        <img id="bedroom-overlay-img" alt="" />
    </div>
</section>

<script is:inline>
    const image = document.querySelectorAll(".bedrooms-container .image");
    const bedroomOverlay = document.getElementById("bedroom-overlay");
    const overlayImage = document.getElementById("bedroom-overlay-img");
    const closeButton = document.getElementById("bedroom-overlay-close");

    image.forEach((img) => {
        img.addEventListener("click", () => {
            overlayImage.src = img.src;
            overlayImage.alt = img.alt;
            bedroomOverlay.classList.add("active");
        });
    });

    bedroomOverlay.addEventListener("click", () => {
        bedroomOverlay.classList.remove("active");
    });

    closeButton.addEventListener("click", () => {
        bedroomOverlay.classList.remove("active");
    });

    // ===================================
    // 🚀 GSAP ANIMATIES
    // ===================================

    function initBedroomAnimations() {
    if (!window.lenisReady || !window.gsap) {
        setTimeout(initBedroomAnimations, 100);
        return;
    }

    console.log("🛏️ Starting bedroom animations...");

    // Set initial state voor alle images
    window.gsap.set(".image", {
        scale: 1.25,
    });

    // Set initial state voor alle teksten
    window.gsap.set(".bedrooms-text", {
        y: 20,
        opacity: 0,
    });

    // Individuele animaties voor elke image
    const images = document.querySelectorAll(".image");
    images.forEach((imageElement, index) => {
        window.gsap.to(imageElement, {
            scale: 1,
            scrollTrigger: {
                trigger: imageElement.closest('.bedroom'),
                start: "top 85%",
                end: "bottom 60%",
                scrub: 1,
                // markers: true,
            },
        });
    });

    // Individuele animaties voor elke tekst (met kleine delay na image)
    const bedroomTexts = document.querySelectorAll(".bedrooms-text");
    bedroomTexts.forEach((textElement, index) => {
        window.gsap.to(textElement, {
            y: 0,
            opacity: 1,
            scrollTrigger: {
                trigger: textElement.closest('.bedroom'),
                start: "top 70%", // Iets later dan de image
                end: "85% 70%",
                scrub: 1,
                // markers: true,
            },
        });
    });

    console.log("✅ Bedroom animations initialized");
}

    // Start animaties wanneer dependencies klaar zijn
    document.addEventListener("lenisReady", initBedroomAnimations);
    if (window.lenisReady) {
        initBedroomAnimations();
    }
</script>

<style>
    .bedrooms-container {
        display: flex;
        flex-direction: column;
        padding: 160px 25px;
    }

    .image-wrapper {
        width: 100%;
        height: auto;
        border: solid 1.5px var(--primary-color);
        overflow: hidden;
    }

    .bedrooms img {
        vertical-align: top;
        width: 100%;
        height: auto;
    }

    .bedrooms-text {
        padding: 8px 0 24px;
        line-height: 1.2;
    }

    .bedrooms-text span {
        font-size: 14px;
    }

    .bedroom-overlay {
        position: fixed;
        inset: 0;
        background: rgba(0, 0, 0, 0.8);
        align-items: center;
        justify-content: center;
        cursor: zoom-out;
        z-index: 1000;
        transition:
            opacity 0.2s ease-out,
            visibility 0.2s ease-out;
        opacity: 0;
        visibility: hidden;
        pointer-events: none;
        display: flex;
    }

    .bedroom-overlay.active {
        opacity: 1;
        visibility: visible;
        pointer-events: auto;
    }

    .bedroom-overlay img {
        max-width: 90%;
        max-height: 90%;
        width: 100%;
        height: auto;
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);
    }

    .bedroom-overlay-close {
        position: absolute;
        top: 16px;
        right: 16px;
        background: transparent;
        border: none;
        font-size: 2rem;
        color: var(--light-color);
        cursor: pointer;
        z-index: 1001;
        line-height: 1;
    }

    .bedroom-overlay-close svg {
        width: 48px;
        height: auto;
    }

    .bedroom-overlay-close:focus {
        outline: 2px solid #fff;
    }

    @media screen and (min-width: 544px) {
        .bedrooms-container {
            padding: 160px 40px;
        }
    }

    @media screen and (min-width: 744px) {
        .bedrooms {
            display: flex;
            gap: 36px;
        }

        .bedrooms-text span {
            font-size: 16px;
        }
    }

    @media screen and (min-width: 1024px) {
        .bedrooms-container {
            padding: 0 80px 0 25px;
        }
    }

    @media screen and (min-width: 1224px) {
        .bedrooms-container {
            padding: 0 120px 0 50px;
        }

        .bedrooms-text span {
            font-size: 18px;
        }
    }

    /* @media screen and (min-width: 1424px) {
    } */
</style>
